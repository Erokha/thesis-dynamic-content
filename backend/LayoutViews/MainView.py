from constraints.constraints import *
from View.TDCViews import *

list_item_height = 50
list_item_spacing = 20

header_color = "#0CAAE1"
gray_color = "#E9E9E9"

def make_background_view():
    return TDCBaseView(
        id="main_header",
        constraints=[
            EdgeConstraint(
                edge=Edge.top,
                value=RelativeEdgeValue(
                    id=None,
                    edge=Edge.top,
                    constant=0
                )
            ),
            EdgeConstraint(
                edge=Edge.bottom,
                value=RelativeEdgeValue(
                    id=None,
                    edge=Edge.bottom,
                    constant=0
                )
            ),
            SideConstraint(
                side=Side.left,
                value=RelativeSideValue(
                    id=None,
                    side=Side.left,
                    constant=0
                )
            ),
            SideConstraint(
                side=Side.right,
                value=RelativeSideValue(
                    id=None,
                    side=Side.right,
                    constant=0
                )
            )
        ],
        configuration=TDCBaseViewConfiguration(
            color="#FFFFFF",
            corner_radius=0
        ),
        subviews=[]
    )

def make_header_view():
    textView = TDCTextView(
        id="main_header_text",
        constraints=[
            EdgeConstraint(
                edge=Edge.bottom,
                value=RelativeEdgeValue(
                    id=None,
                    edge=Edge.bottom,
                    constant=-25
                )
            ),
            SizeConstraint(
                size_type=SizeType.height,
                value=AbsoluteSizeValue(
                    value=35
                )
            ),
            SideConstraint(
                side=Side.left,
                value=RelativeSideValue(
                    id=None,
                    side=Side.left,
                    constant=40
                )
            ),
            SideConstraint(
                side=Side.right,
                value=RelativeSideValue(
                    id=None,
                    side=Side.right,
                    constant=-40
                )
            )
        ],
        configuration=TDCTextViewConfiguration(
            text_color="#ffffff",
            text_size=32,
            text="Title",
            arrangenment=TDCTextViewArrangenment.center
        ),
        subviews=[]
    )
    return TDCBaseView(
        id="main_header",
        constraints=[
            EdgeConstraint(
                edge=Edge.top,
                value=RelativeEdgeValue(
                    id=None,
                    edge=Edge.top,
                    constant=-60
                )
            ),
            SizeConstraint(
                size_type=SizeType.height,
                value=AbsoluteSizeValue(
                    value=160
                )
            ),
            SideConstraint(
                side=Side.left,
                value=RelativeSideValue(
                    id=None,
                    side=Side.left,
                    constant=0
                )
            ),
            SideConstraint(
                side=Side.right,
                value=RelativeSideValue(
                    id=None,
                    side=Side.right,
                    constant=0
                )
            )
        ],
        configuration=TDCBaseViewConfiguration(
            color=header_color,
            corner_radius=20
        ),
        subviews=[
            textView
        ]
    )

def make_list_item(number: int):
    iconView = TDCIconView(
        id=f"list_item_n{number}_icon",
        constraints=[
            EdgeConstraint(
                edge=Edge.top,
                value=RelativeEdgeValue(
                    id=None,
                    edge=Edge.top,
                    constant=10
                )
            ),
            EdgeConstraint(
                edge=Edge.bottom,
                value=RelativeEdgeValue(
                    id=None,
                    edge=Edge.bottom,
                    constant=-10
                )
            ),
            SizeConstraint(
                size_type=SizeType.width,
                value=AbsoluteSizeValue(
                    value=30
                )
            ),
            SideConstraint(
                side=Side.left,
                value=RelativeSideValue(
                    id=None,
                    side=Side.left,
                    constant=10
                )
            )
        ],
        configuration=TDCIconViewConfiguration(
            color=gray_color,
            corner_radius=5,
            content_scale_type=TDCIconViewScaleType.scale_aspect_fill,
            image_url="https://commons.bmstu.wiki/images/c/c4/IU7-im.png"
        ),
        subviews=[]
    )
    return TDCBaseView(
        id=f"list_item_n{number}",
        constraints=[
            EdgeConstraint(
                edge=Edge.top,
                value=RelativeEdgeValue(
                    id=None,
                    edge=Edge.top,
                    constant=120 + (number - 1) * (list_item_height + list_item_spacing) + list_item_spacing
                )
            ),
            SizeConstraint(
                size_type=SizeType.height,
                value=AbsoluteSizeValue(
                    value=list_item_height
                )
            ),
            SideConstraint(
                side=Side.left,
                value=RelativeSideValue(
                    id=None,
                    side=Side.left,
                    constant=20
                )
            ),
            SideConstraint(
                side=Side.right,
                value=RelativeSideValue(
                    id=None,
                    side=Side.right,
                    constant=-20
                )
            )
        ],
        configuration=TDCBaseViewConfiguration(
            color="#FF9301",
            corner_radius=0
        ),
        subviews=[
            iconView
        ]
    )

def make_tab_bar():
    left_tabbar_item = TDCBaseView(
        id=f"tab_bar_item_left",
        constraints=[
            EdgeConstraint(
                edge=Edge.bottom,
                value=RelativeEdgeValue(
                    id=None,
                    edge=Edge.bottom,
                    constant=-10
                )
            ),
            EdgeConstraint(
                edge=Edge.top,
                value=RelativeEdgeValue(
                    id=None,
                    edge=Edge.top,
                    constant=10
                )
            ),
            SideConstraint(
                side=Side.left,
                value=RelativeSideValue(
                    id=None,
                    side=Side.left,
                    constant=20
                )
            ),
            SizeConstraint(
                size_type=SizeType.width,
                value=AbsoluteSizeValue(
                    value=25
                )
            )
        ],
        configuration=TDCBaseViewConfiguration(
            color=header_color,
            corner_radius=0
        ),
        subviews=[]
    )
    middle_tabbar_item = TDCBaseView(
        id=f"tab_bar_item_middle",
        constraints=[
            EdgeConstraint(
                edge=Edge.bottom,
                value=RelativeEdgeValue(
                    id=None,
                    edge=Edge.bottom,
                    constant=-10
                )
            ),
            EdgeConstraint(
                edge=Edge.top,
                value=RelativeEdgeValue(
                    id=None,
                    edge=Edge.top,
                    constant=10
                )
            ),
            SideConstraint(
                side=Side.left,
                value=RelativeSideValue(
                    id=None,
                    side=Side.left,
                    constant=145
                )
            ),
            SizeConstraint(
                size_type=SizeType.width,
                value=AbsoluteSizeValue(
                    value=25
                )
            )
        ],
        configuration=TDCBaseViewConfiguration(
            color=header_color,
            corner_radius=0
        ),
        subviews=[]
    )
    right_tabbar_item = TDCBaseView(
        id=f"tab_bar_item_right",
        constraints=[
            EdgeConstraint(
                edge=Edge.bottom,
                value=RelativeEdgeValue(
                    id=None,
                    edge=Edge.bottom,
                    constant=-10
                )
            ),
            EdgeConstraint(
                edge=Edge.top,
                value=RelativeEdgeValue(
                    id=None,
                    edge=Edge.top,
                    constant=10
                )
            ),
            SideConstraint(
                side=Side.right,
                value=RelativeSideValue(
                    id=None,
                    side=Side.right,
                    constant=-20
                )
            ),
            SizeConstraint(
                size_type=SizeType.width,
                value=AbsoluteSizeValue(
                    value=25
                )
            )
        ],
        configuration=TDCBaseViewConfiguration(
            color=header_color,
            corner_radius=0
        ),
        subviews=[]
    )
    return TDCBaseView(
        id=f"tab_bar",
        constraints=[
            EdgeConstraint(
                edge=Edge.bottom,
                value=RelativeEdgeValue(
                    id=None,
                    edge=Edge.bottom,
                    constant=0
                )
            ),
            SizeConstraint(
                size_type=SizeType.height,
                value=AbsoluteSizeValue(
                    value=45
                )
            ),
            SideConstraint(
                side=Side.left,
                value=RelativeSideValue(
                    id=None,
                    side=Side.left,
                    constant=0
                )
            ),
            SideConstraint(
                side=Side.right,
                value=RelativeSideValue(
                    id=None,
                    side=Side.right,
                    constant=0
                )
            )
        ],
        configuration=TDCBaseViewConfiguration(
            color="#B4B4B4",
            corner_radius=0
        ),
        subviews=[
            left_tabbar_item,
            middle_tabbar_item,
            right_tabbar_item
        ]
    )

def make_main_view():
    view = make_background_view()
    view.subviews = [
        make_header_view(),
        make_list_item(1),
        make_list_item(2),
        make_list_item(3),
        make_list_item(4),
        make_list_item(5),
        make_tab_bar()
    ]
    return view
